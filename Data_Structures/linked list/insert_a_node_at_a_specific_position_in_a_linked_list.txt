'''You’re given the pointer to the head node of a linked list, an integer to add to the list and 
the position at which the integer must be inserted. Create a new node with the given integer, 
insert this node at the desired position and return the head node.

A position of 0 indicates head, a position of 1 indicates one node away from the head and so on. 
The head pointer given may be null meaning that the initial list is empty.'''

#!/bin/python3

import math
import os
import random
import re
import sys

class SinglyLinkedListNode:
    def __init__(self, node_data):
        self.data = node_data
        self.next = None

class SinglyLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def insert_node(self, node_data):
        node = SinglyLinkedListNode(node_data)

        if not self.head:
            self.head = node
        else:
            self.tail.next = node


        self.tail = node

def print_singly_linked_list(node, sep, fptr):
    while node:
        fptr.write(str(node.data))

        node = node.next

        if node:
            fptr.write(sep)

# Complete the insertNodeAtPosition function below.

#
# For your reference:
#
# SinglyLinkedListNode:
#     int data
#     SinglyLinkedListNode next
#
#
def insertNodeAtPosition(head, data, position):
    newnode = SinglyLinkedListNode(data)
    currentnode = head
    length = 0 
    while currentnode is not None:
        length+= 1
        currentnode=currentnode.next
    if(position<0 or position>length):
        return
    if(position is 0):
        temp = head
        head = newnode
        head.next = temp
        del temp
    currentnode = head
    pos = 0

    #temp = currentnode

    while True:
        if(pos == position):
            previousnode.next = newnode
            newnode.next = currentnode
            break
        previousnode = currentnode
        currentnode = currentnode.next
        pos += 1
    return head
        


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    llist_count = int(input())

    llist = SinglyLinkedList()

    for _ in range(llist_count):
        llist_item = int(input())
        llist.insert_node(llist_item)

    data = int(input())

    position = int(input())

    llist_head = insertNodeAtPosition(llist.head, data, position)

    print_singly_linked_list(llist_head, ' ', fptr)
    fptr.write('\n')

    fptr.close()
